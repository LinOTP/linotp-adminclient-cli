variables:
  DEV_REPO_URL: http://avocado.corp.lsexperts.de/deb-repo
  LANG: C.UTF-8
  EMAIL: "KeyIdentity GmbH <packaging@keyidentity.com>"
  # Merges/tags to this branch trigger uploads
  GITBOX_CI_UPLOAD_BRANCHES: '/^(branch-v|master)/'
  # Tags to these release branches trigger golden-repo uploads
  GITBOX_CI_RELEASE_TAGS: '/^release/'
  GITBOX_CI_GOLDEN_RELEASES: '/^buster$/'

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule' # Execute nightly jobs
    - if: $CI_MERGE_REQUEST_ID              # Execute jobs in MR context
    - if: '$CI_COMMIT_BRANCH =~ $GITBOX_CI_UPLOAD_BRANCHES'
                                            # Execute jobs when new commit is pushed to upload branch

stages:
  - build
  - deploy
  - upload-debian-packages
  - copy-to-golden

.build-debs:
  stage: build
  image: debian:${DEBIAN_RELEASE_NAME}
  script:
    - apt-get update
    - apt-get install --yes --no-install-recommends devscripts build-essential equivs git-buildpackage lsb-release libdistro-info-perl
    - ci/update-debian-changelog
    - mk-build-deps --install --remove --tool "apt-get --yes --no-install-recommends" debian/control
    - gbp buildpackage --git-ignore-new --git-ignore-branch -uc -us
    - mkdir -p artifacts
    - dcmd mv ../*.changes ../*.build artifacts/
  artifacts:
    paths:
      - artifacts/*

.build-jessie:
  extends: .build-debs
  allow_failure: true
  variables:
    DEBIAN_RELEASE_NAME: jessie

.build-stretch:
  extends: .build-debs
  variables:
    DEBIAN_RELEASE_NAME: stretch

.build-buster:
  extends: .build-debs
  variables:
    DEBIAN_RELEASE_NAME: buster

# Upload deb packages to development repository.
# We use scp to upload all the files to an incoming directory.

.before_upload: &before_upload
  before_script:
    # Ensure required variables have been set
    - test -n "${DEV_REPO_HOST}"
    - test -n "${DEV_REPO_KNOWN_HOSTS}"
    - test -n "${DEV_REPO_SSH_SUBMIT_KEY}"
    # Install dependencies
    - apt-get update && apt-get install --yes --no-install-recommends devscripts openssh-client
    # Configure ssh
    - eval $(ssh-agent -s)
    - echo "$DEV_REPO_SSH_SUBMIT_KEY" | tr -d '\r' | ssh-add - >/dev/null
    - mkdir --mode 700 -p ~/.ssh
    - echo "CheckHostIP no" >>~/.ssh/config
    - echo "$DEV_REPO_KNOWN_HOSTS" >~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

upload-debs:
  stage: upload-debian-packages
  image: debian:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never               # Nightly jobs do not upload
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH =~ $GITBOX_CI_UPLOAD_BRANCHES'
      when: always              # Auto-upload if merged to upload branch
    - if: $CI_COMMIT_TAG
      when: always              # Auto-upload if tagged
    - when: manual              # Otherwise allow manual upload from branch
      allow_failure: true
  <<: *before_upload
  script:
    - find artifacts/* -ls
    # scp all files referenced by the changes files to the repository
    - dcmd scp artifacts/*.changes dists@$DEV_REPO_HOST:deb-repo/incoming

# Copy packages to golden repo if they have a `release` tag.
# Note that this must come after `upload-debs`

.copy-to-golden:
  stage: copy-to-golden
  image: debian:latest
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ $GITBOX_CI_RELEASE_TAGS && $DEBIAN_RELEASE_NAME =~ $GITBOX_CI_GOLDEN_RELEASES'
      when: always
    - when: manual
      allow_failure: true
  <<: *before_upload
  script:
    - ci/copy-to-golden "$DEBIAN_RELEASE_NAME" artifacts/*.changes

.golden-jessie:
  extends: .copy-to-golden
  allow_failure: true
  variables:
    DEBIAN_RELEASE_NAME: jessie

.golden-stretch:
  extends: .copy-to-golden
  variables:
    DEBIAN_RELEASE_NAME: stretch

.golden-buster:
  extends: .copy-to-golden
  variables:
    DEBIAN_RELEASE_NAME: buster
